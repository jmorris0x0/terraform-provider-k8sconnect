name: Nightly

on:
  schedule:
    - cron: '0 2 * * *'  # 2 AM UTC daily
  workflow_dispatch:
    inputs:
      enable_opentofu:
        description: 'Test with OpenTofu'
        type: boolean
        default: true
      enable_terraform_latest:
        description: 'Test with Terraform latest'
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  opentofu-test:
    if: github.event_name == 'schedule' || inputs.enable_opentofu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        opentofu: ['1.10.2']
    steps:
      - uses: actions/checkout@v5
      
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ matrix.opentofu }}
      
      - name: Create Kind cluster
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          make oidc-setup
      
      - name: Run acceptance tests with OpenTofu
        run: |
          # OpenTofu uses 'tofu' binary, so we need to adjust
          export TF_ACC_TERRAFORM_PATH=$(which tofu)
          make testacc
      
      - name: Clean up
        if: always()
        run: kind delete cluster --name oidc-e2e || true

  terraform-latest-test:
    if: github.event_name == 'schedule' || inputs.enable_terraform_latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      
      - name: Set up latest Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
          terraform_wrapper: false
      
      - name: Create Kind cluster
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          make oidc-setup
      
      - name: Run acceptance tests
        run: make testacc
      
      - name: Clean up
        if: always()
        run: kind delete cluster --name oidc-e2e || true

