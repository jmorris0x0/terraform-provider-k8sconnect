---
page_title: "{{.Type}} {{.Name}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Type}}: {{.Name}}

{{ .Description | trimspace }}

## Example Usage - Dependency Ordering

Use this datasource to ensure proper dependency ordering when applying manifests that include CRDs and custom resources:

```terraform
data "k8sconnect_yaml_scoped" "all" {
  content = file("${path.module}/manifests.yaml")
}

# Apply CRDs first - must exist before custom resources can be created
resource "k8sconnect_object" "crds" {
  for_each = data.k8sconnect_yaml_scoped.all.crds

  yaml_body          = each.value
  cluster_connection = var.cluster_connection
}

# Apply cluster-scoped resources second (Namespaces, ClusterRoles, etc.)
resource "k8sconnect_object" "cluster_scoped" {
  for_each = data.k8sconnect_yaml_scoped.all.cluster_scoped

  yaml_body          = each.value
  cluster_connection = var.cluster_connection

  depends_on = [k8sconnect_object.crds]
}

# Apply namespaced resources last (Deployments, Services, ConfigMaps, Custom Resources, etc.)
resource "k8sconnect_object" "namespaced" {
  for_each = data.k8sconnect_yaml_scoped.all.namespaced

  yaml_body          = each.value
  cluster_connection = var.cluster_connection

  depends_on = [
    k8sconnect_object.crds,
    k8sconnect_object.cluster_scoped
  ]
}
```

## Resource Categories

Resources are automatically categorized into three groups:

1. **CRDs** (`crds` output) - CustomResourceDefinitions that must be applied first
2. **Cluster-scoped** (`cluster_scoped` output) - Namespaces, ClusterRoles, PersistentVolumes, etc.
3. **Namespaced** (`namespaced` output) - Deployments, Services, ConfigMaps, and custom resources

{{ .SchemaMarkdown | trimspace }}
