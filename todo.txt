CRITICAL BUGS & FIXES

Base64 cert handling: Better error message when cluster_ca_certificate isn't base64 encoded, or auto-detect both formats
Remove print statements: Convert all debug prints to proper logging or remove them
Fix flaky test: yaml-split-dependency-ordering fails due to CRD eventual consistency - add wait/retry
Security scanning alerts: Address current GitHub code scanning issues

DOCUMENTATION & RELEASE

Registry landing page: Write main docs
Verify attribute docs: Status changes need documentation updates
Key features placement: Move higher in docs
Add token example: To connection methods section
Fill community standards: Issue templates, contributing guide, etc.
Example improvements: Show both inline and template file patterns

TESTING GAPS

Ownership edge cases: Create transition matrix and acceptance tests for all ownership scenarios
Ownership conflict test: Test without force_conflicts=true (item 27)
Import blocks: Verify they work correctly
Cluster connection validation: Complex attribute combinations need better testing
Datasource testing: Dependency graph, unknowns handling, interpolation
OpenTofu tests: Add compatibility testing
Check for stubs/skips: Audit test suite for forgotten temporary code
Auth API versions: Handle both v1 and v1beta1
HPA simulation: Test multiple simultaneous ownership changes
Don't need the first load balancer example. Find a different one or delete.

FEATURE ADDITIONS

ignore_field_changes: Surgical field ignores for HPA and controllers
Custom ownership annotations: Solve cross-state conflicts
Wait_for in datasource: Consider if this makes sense
Full JSON manifest: Make available as computed attribute
Status field guardrails: Warn if field doesn't start with "status"
Large provider chunking: Research how others handle very large resources

UX IMPROVEMENTS

Remove field_ownership from diffs: Just noise in output
Hide private attributes: Some should not be in UI
Error harmonization: Single source of truth for error messages
YAML diff vs dry-run diff: Evaluate which is better UX
Datasource args: Flatten nested structure unless adding more attributes
Better datasource errors: Improve error messages
Warnings for old versions: Terraform <1.6 or pre-SSA Kubernetes
Lock down the interface before launch: The attributes and behavior I ship with will haunt me for years.

CODE QUALITY

Cyclomatic complexity: Reduce all functions to <15
General refactoring: Simplification pass
Convert to issues: Move this list to GitHub issues

MARKETING & GROWTH

SEO optimization: Is "k8sconnect" optimal for discovery?
Tagline: "A Kubernetes Terraform provider built around edge cases"
Launch content: Medium article, r/kubernetes, r/terraform, HackerNews posts, SweetOps Slack, Kubernetes Slack
Release pipeline: Add Tofu release, verify Windows/Linux builds

DEFERRED/COMPLEX

Delayed plan application: Handle out-of-date plans
Dynamic datasource lookup: Use same JSON-to-attribute logic as resource
Move server-side features up: In feature list
Migration plan for other providers
Remove imported_without_annotations or make private
Rename managed_state_projection
Fix makefile to install all dependencies. Try on fresh laptop.



k8sconnect_manifest.namespace_k8sconnect: Creating...
╷
│ Error: Preparation Failed
│
│   with k8sconnect_manifest.namespace_k8sconnect,
│   on main.tf line 64, in resource "k8sconnect_manifest" "namespace_k8sconnect":
│   64: resource "k8sconnect_manifest" "namespace_k8sconnect" {
│
│ failed to create Kubernetes client: failed to create REST config: failed to decode
│ cluster_ca_certificate: illegal base64 data at input byte 0
