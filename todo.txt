CRITICAL BUGS & FIXES

* Solve import syntax issue for api version
GB does this:
   # Import the my-namespace Namespace
   terraform import kubectl_manifest.my-namespace v1//Namespace//my-namespace

   # Import the certmanager Issuer CRD named cluster-selfsigned-issuer-root-ca from the my-namespace namespace
   $ terraform import -provider kubectl module.kubernetes.kubectl_manifest.crd-example certmanager.k8s.io/v1alpha1//Issuer//cluster-selfsigned-issuer-root-ca//my-namespace


DOCUMENTATION & RELEASE

Verify attribute docs: Status changes need documentation updates
Nested Schema for wait_for: Needs love


TESTING GAPS

Ownership edge cases: Create transition matrix and acceptance tests for all ownership scenarios
Import blocks: Verify they work correctly
Delayed plan application: Handle out of date plans
Autodetect the most recent terraform version for testing locally and in CI. Otherwise this is monthly toil.

FEATURE ADDITIONS

Custom ownership annotations: Solve cross-state conflicts
Status field guardrails: Warn if field doesn't start with "status"

MARKETING & GROWTH

Launch content: Medium article, r/kubernetes, r/terraform, HackerNews posts, SweetOps Slack, Kubernetes Slack


DEFERRED/COMPLEX

Fix makefile to install all dependencies. Try on fresh laptop.

Migration tooling!
"Stuck with thousands of lines of Kubernetes HCL? We'll help you escape."
hcl2yaml main.tf > manifests.yaml
Could probably knock out an MVP using the Terraform provider schema definitions to reverse the translation.


  Critical Gaps to Address

  Must-Have Before Release:

  1. Import documentation
    - Your format, examples, behavior
    - Critical - people need to migrate existing resources

  Should Consider:

  4. field_manager_name - let users control the field manager identity
    - Useful for debugging SSA conflicts
    - HashiCorp has this, I auto-generate
    - Could be quite complex?


Unmet needs and pain points:

Terraform wants to be declarative and stateful, Kubernetes wants to be self-healing and continuously reconciling, and developers just want to ship code without becoming infrastructure experts.

Add a file with the terraform block for the examples? It would be nice to be fully copy pastable.

Add a deep compare yaml helper function for the tests. string comparisons are brittle and have wasted a lot of time for me.

Add CI job to check/update cluster scoped resources list?

Test section 15-18 in EDGE_CASES.md for the patch after I dogfood it a bit.

Should the resource datasource and patch be restricted from looking at resources we own? I thought it was already but I guess not. How would this work for plans where the cluster can't be reached?

The examples linked in the readme aren't quite right. Need to verify links. The yaml split section leads to a list of all 12 examples rather than the yaml section

Can you wait for stuff that isn't status? Is wait_for really sold in the registry docs? We kinda forgot about it for a minute.

Autotest markdown examples?

Mention that that two kinds of patches aren't SSA therefore UX difference.
